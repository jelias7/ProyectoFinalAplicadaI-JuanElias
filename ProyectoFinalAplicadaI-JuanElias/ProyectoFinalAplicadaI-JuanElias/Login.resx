<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="MyErrorProvider.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABwAAAAcAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAB0AAAA/wAAAPsAAAD+AAAA/QAAAP0AAAD9AAAA/QAA
        AP0AAAD9AAAA/QAAAP0AAAD9AAAA/QAAAP0AAAD9AAAA/QAAAP0AAAD9AAAA/QAAAP0AAAD8AAAA/wAA
        AM0AAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAHQAAAD/AAAA+wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP0AAAD/AAAAzQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAdAAAAP8AAAD9AAAA7QAA
        ANsAAADeAAAA3gAAAN4AAADeAAAA3gAAAN4AAADeAAAA3gAAAN4AAADeAAAA3gAAAN4AAADeAAAA3gAA
        AN0AAADiAAAA/AAAAP8AAADNAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAB0AAAA/wAA
        AP8AAAB3AAAAAAAAAAkAAAAFAAAABQAAAAUAAAAFAAAABQAAAAUAAAAFAAAABQAAAAUAAAAFAAAABQAA
        AAUAAAAHAAAAAAAAACUAAAD4AAAA/wAAAMwAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAA
        AHQAAAD/AAAA/wAAAHQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAIAAAAAAAAAIQAAAPgAAAD/AAAAzAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAQAAAAAAAAAdAAAAP8AAAD/AAAAdAAAAAAAAAAFAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAEAAAABAAAAAgAAAAAAAAAiAAAA+AAAAP8AAADMAAAAAAAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAABAAAAAAAAAB0AAAA/wAAAP8AAAB0AAAAAAAAAAQAAAAAAAAAAAAAAAAAAAACAAAAAwAA
        AAMAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAACEAAAD4AAAA/wAAAMwAAAAAAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAHIAAAD/AAAA/wAAAHIAAAAAAAAABAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAIQAAAPgAAAD/AAAAzAAA
        AAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAdAAAAP8AAAD/AAAAdAAAAAAAAAAEAAAAAAAA
        AAEAAAAAAAAAMQAAAEwAAABJAAAAFQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAhAAAA+AAA
        AP8AAADMAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAA1AAAAegAAAHoAAAA1AAAAAAAA
        AAIAAAAAAAAAAwAAAAAAAABNAAAA/wAAAP8AAAChAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAACAAAAAAAA
        ACEAAAD4AAAA/wAAAMwAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAACaAAAA/wAAAP8AAABFAAAAAAAAAAMAAAAAAAAAAAAA
        AAIAAAAAAAAAIQAAAPgAAAD/AAAAzAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAA
        AAQAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAABgAAADjAAAA/wAAAMsAAAAFAAAAAAAA
        AAEAAAAAAAAAAgAAAAAAAAAhAAAA+AAAAP8AAADMAAAAAAAAAAEAAAAAAAAAAAAAAAMAAAAEAAAABAAA
        AAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAIAAAAAAAAAGMAAAD/AAAA/wAA
        AHIAAAAAAAAABAAAAAAAAAACAAAAAAAAACEAAAD4AAAA/wAAAMwAAAAAAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAA
        AKoAAAD/AAAA6gAAAB8AAAAAAAAAAgAAAAIAAAAAAAAAIQAAAPgAAAD/AAAAzAAAAAAAAAABAAAAAAAA
        AAAAAABdAAAAeQAAAHMAAAB0AAAAdAAAAHQAAAB0AAAAdAAAAHQAAAB0AAAAdAAAAHQAAAB0AAAAdAAA
        AHYAAABrAAAAlgAAAP8AAAD/AAAAogAAAAAAAAACAAAAAgAAAAAAAAAhAAAA+AAAAP8AAADMAAAAAAAA
        AAEAAAABAAAAAAAAAM0AAAD/AAAA/QAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP0AAAD/AAAASgAAAAAAAAAFAAAAAAAAACEAAAD4AAAA/wAA
        AMwAAAAAAAAAAQAAAAEAAAAAAAAAzQAAAP8AAAD9AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/QAAAP8AAABKAAAAAAAAAAUAAAAAAAAAIQAA
        APgAAAD/AAAAzAAAAAAAAAABAAAAAAAAAAAAAABdAAAAeQAAAHMAAAB0AAAAdAAAAHQAAAB0AAAAdAAA
        AHQAAAB0AAAAdAAAAHQAAAB0AAAAdAAAAHYAAABrAAAAlgAAAP8AAAD/AAAAogAAAAAAAAACAAAAAgAA
        AAAAAAAhAAAA+AAAAP8AAADMAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAACqAAAA/wAAAOoAAAAfAAAAAAAA
        AAIAAAACAAAAAAAAACEAAAD4AAAA/wAAAMwAAAAAAAAAAQAAAAAAAAAAAAAAAwAAAAQAAAAEAAAABAAA
        AAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAgAAAAAAAAAYwAAAP8AAAD/AAAAcgAA
        AAAAAAAEAAAAAAAAAAIAAAAAAAAAIQAAAPgAAAD/AAAAzAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAgAAAAQAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAABgAAADjAAAA/wAA
        AMsAAAAFAAAAAAAAAAEAAAAAAAAAAgAAAAAAAAAhAAAA+AAAAP8AAADMAAAAAAAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAmgAA
        AP8AAAD/AAAARQAAAAAAAAADAAAAAAAAAAAAAAACAAAAAAAAACEAAAD4AAAA/wAAAMwAAAAAAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAADUAAAB6AAAAegAAADUAAAAAAAAAAgAAAAAAAAADAAAAAAAA
        AE0AAAD/AAAA/wAAAKEAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAIQAAAPgAAAD/AAAAzAAA
        AAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAdAAAAP8AAAD/AAAAdAAAAAAAAAAEAAAAAAAA
        AAEAAAAAAAAAMQAAAEwAAABJAAAAFQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAhAAAA+AAA
        AP8AAADMAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAByAAAA/wAAAP8AAAByAAAAAAAA
        AAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAA
        ACEAAAD4AAAA/wAAAMwAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAHQAAAD/AAAA/wAA
        AHQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAIAAAADAAAAAwAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAIAAAAAAAAAIQAAAPgAAAD/AAAAzAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAdAAA
        AP8AAAD/AAAAdAAAAAAAAAAFAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAgAAAAAAAAAiAAAA+AAAAP8AAADMAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAABAAA
        AAAAAAB0AAAA/wAAAP8AAAB0AAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAACEAAAD4AAAA/wAAAMwAAAAAAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAEAAAAAAAAAHQAAAD/AAAA/wAAAHcAAAAAAAAACQAAAAUAAAAFAAAABQAAAAUAAAAFAAAABQAA
        AAUAAAAFAAAABQAAAAUAAAAFAAAABQAAAAcAAAAAAAAAJQAAAPgAAAD/AAAAzAAAAAAAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAQAAAAAAAAAdAAAAP8AAAD9AAAA7QAAANsAAADeAAAA3gAAAN4AAADeAAAA3gAA
        AN4AAADeAAAA3gAAAN4AAADeAAAA3gAAAN4AAADeAAAA3gAAAN0AAADiAAAA/AAAAP8AAADNAAAAAAAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAB0AAAA/wAAAPsAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD9AAAA/wAA
        AM0AAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAHQAAAD/AAAA+wAAAP4AAAD9AAAA/QAA
        AP0AAAD9AAAA/QAAAP0AAAD9AAAA/QAAAP0AAAD9AAAA/QAAAP0AAAD9AAAA/QAAAP0AAAD9AAAA/QAA
        APwAAAD/AAAAzQAAAAAAAAAB9AAAAvQAAAL0AAAC9CAAQvQv/0L0IABC9CoXQvQvS0L0IhNC9CIRQv/5
        CkL0KQRCQACFQv/+QkJAAAJCQAABQkAAAUJAAAJC//5CQkAAhUL0KQRC//kKQvQiEUL0IhNC9C9LQvQq
        F0L0IABC9C//QvQgAEL0AAAC9AAAAvQAAAI=
</value>
  </data>
</root>